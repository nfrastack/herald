# SPDX-FileCopyrightText: Â© 2025 Nfrastack <code@nfrastack.com>
#
# SPDX-License-Identifier: BSD-3-Clause

ARG DISTRO=alpine
ARG DISTRO_VARIANT=3.22

FROM docker.io/nfrastack/container-base:${DISTRO}_${DISTRO_VARIANT}

LABEL \
  org.opencontainers.image.title="Herald" \
  org.opencontainers.image.description="Manage DNS records based on DNS servers based on events from Docker or Traefik" \
  org.opencontainers.image.url="https://hub.docker.com/r/nfrastack/herald" \
  org.opencontainers.image.documentation="https://github.com/nfrastack/herald/blob/main/README.md" \
  org.opencontainers.image.source="https://github.com/nfrastack/herald.git" \
  org.opencontainers.image.authors="Nfrastack <code@nfrastack.com>" \
  org.opencontainers.image.vendor="Nfrastack <https://www.nfrastack.com>" \
  org.opencontainers.image.licenses="BSD-3-Clause"

ARG HERALD_VERSION \
    GOLANG_VERSION \
    YQ_VERSION

ENV CONTAINER_ENABLE_SCHEDULING=TRUE \
    HERALD_VERSION=${HERALD_VERSION:-"2.2.0"} \
    HERALD_USER=herald \
    HERALD_GROUP=herald \
    YQ_VERSION=${YQ_VERSION:-"v4.47.1"} \
    YQ_REPO_URL=${YQ_REPO_URL:-"https://github.com/mikefarah/yq"} \
    IMAGE_VERSION=${HERALD_VERSION} \
    IMAGE_NAME="nfrastack/herald" \
    IMAGE_REPO_URL="https://github.com/nfrastack/herald"

COPY / /usr/src/herald

RUN echo "" && \
    HERALD_BUILD_DEPS_ALPINE=" \
                                #go \
                                make \
                          " \
                          && \
    \
    HERALD_BUILD_DEPS_DEBIAN=" \
                                make \
                          " \
                          && \
    \
    echo "" && \
    source /container/base/functions/container/build && \
    \
    mkdir -p /usr/src/container/ && \
    cp \
        /usr/src/herald/{CHANGELOG.md,LICENSE,README.md} \
                                                /usr/src/container/ \
                                                && \
    \
    container_build_log && \
    \
    create_user "${HERALD_USER}" 1000 "${HERALD_GROUP}" 1000 /dev/null && \
    package update && \
    package upgrade && \
    package install \
                    HERALD_BUILD_DEPS \
                    && \
    \
    mkdir -p /usr/local/go ; \
    GOLANG_VERSION=${GOLANG_VERSION:-"$(curl -sSL https://golang.org/VERSION?m=text | head -n1 | sed "s|^go||g")"} ; \
    curl -sSLk https://dl.google.com/go/go${GOLANG_VERSION}.linux-$(container_info arch alt).tar.gz | tar xvfz - --strip 1 -C /usr/local/go ; \
    ln -sf /usr/local/go/bin/go /usr/local/bin/ ; \
    ln -sf /usr/local/go/bin/godoc /usr/local/bin/ ; \
    ln -sf /usr/local/go/bin/gfmt /usr/local/bin/ ;  \
    \
    clone_git_repo \
                    "${YQ_REPO_URL}" \
                    "${YQ_VERSION}" \
                    /usr/src/yq && \
    \
    go build \
                -ldflags "\
                            -s \
                            -w \
                            -X github.com/mikefarah/yq/v4/version.Version=${YQ_VERSION} \
                          " \
                -o /usr/local/bin/yq \
                && \
    \
    cd /usr/src/herald && \
    \
    case "$(container_info arch alt)" in \
        amd64 | arm64) \
            : ; \
        ;; \
        * ) \
            echo >&2 "Error: unsupported architecture ($(container_info arch alt))" ; \
            exit 1 ; \
        ;; \
    esac ; \
    \
    make && \
    make install && \
    \
    cp -aR \
                /usr/src/herald/container/rootfs/*  \
            / && \
    \
    package remove \
                    HERALD_BUILD_DEPS \
                    && \
    package cleanup && \
    rm -rf \
            /root/go \
            /tmp/* \
            /usr/local/bin/gfmt* \
            /usr/local/bin/go* \
            /usr/local/go

